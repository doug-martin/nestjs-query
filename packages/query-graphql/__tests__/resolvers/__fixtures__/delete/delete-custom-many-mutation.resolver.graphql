type TestResolverDTO {
  id: ID!
  stringField: String!
}

type DeleteManyResponse {
  """The number of records deleted."""
  deletedCount: Int!
}

type TestResolverDTODeleteResponse {
  id: ID
  stringField: String
}

type Query {
  test: TestResolverDTO!
}

type Mutation {
  deleteOneTestResolverDTO(input: DeleteOneTestResolverDTOInput!): TestResolverDTODeleteResponse!
  delete_many_test(input: DeleteManyTestResolverDTOSInput!): DeleteManyResponse!
}

input DeleteOneTestResolverDTOInput {
  """The id of the record to delete."""
  id: ID!
}

input DeleteManyTestResolverDTOSInput {
  """Filter to find records to delete"""
  filter: TestResolverDTODeleteFilter!
}

input TestResolverDTODeleteFilter {
  and: [TestResolverDTODeleteFilter!]
  or: [TestResolverDTODeleteFilter!]
  id: IDFilterComparison
  stringField: StringFieldComparison
}

input IDFilterComparison {
  is: Boolean
  isNot: Boolean
  eq: ID
  neq: ID
  gt: ID
  gte: ID
  lt: ID
  lte: ID
  like: ID
  notLike: ID
  iLike: ID
  notILike: ID
  in: [ID!]
  notIn: [ID!]
}

input StringFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: String
  neq: String
  gt: String
  gte: String
  lt: String
  lte: String
  like: String
  notLike: String
  iLike: String
  notILike: String
  in: [String!]
  notIn: [String!]
}
