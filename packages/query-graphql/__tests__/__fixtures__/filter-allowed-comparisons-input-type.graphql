type Query {
  test(input: TestComparisonDtoFilter!): Int!
}

input TestComparisonDtoFilter {
  and: [TestAllowedComparisonFilter!]
  or: [TestAllowedComparisonFilter!]
  id: NumberFieldComparison
  boolField: TestAllowedComparisonBoolFieldFilterComparison
  dateField: TestAllowedComparisonDateFieldFilterComparison
  floatField: TestAllowedComparisonFloatFieldFilterComparison
  intField: TestAllowedComparisonIntFieldFilterComparison
  numberField: TestAllowedComparisonNumberFieldFilterComparison
  stringField: TestAllowedComparisonStringFieldFilterComparison
}

input TestAllowedComparisonFilter {
  and: [TestAllowedComparisonFilter!]
  or: [TestAllowedComparisonFilter!]
  id: NumberFieldComparison
  boolField: TestAllowedComparisonBoolFieldFilterComparison
  dateField: TestAllowedComparisonDateFieldFilterComparison
  floatField: TestAllowedComparisonFloatFieldFilterComparison
  intField: TestAllowedComparisonIntFieldFilterComparison
  numberField: TestAllowedComparisonNumberFieldFilterComparison
  stringField: TestAllowedComparisonStringFieldFilterComparison
}

input NumberFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: Float
  neq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float!]
  notIn: [Float!]
  between: NumberFieldComparisonBetween
  notBetween: NumberFieldComparisonBetween
}

input NumberFieldComparisonBetween {
  lower: Float!
  upper: Float!
}

input TestAllowedComparisonBoolFieldFilterComparison {
  is: Boolean
}

input TestAllowedComparisonDateFieldFilterComparison {
  eq: DateTime
  neq: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input TestAllowedComparisonFloatFieldFilterComparison {
  gt: Float
  gte: Float
}

input TestAllowedComparisonIntFieldFilterComparison {
  lt: Int
  lte: Int
}

input TestAllowedComparisonNumberFieldFilterComparison {
  eq: Float
  neq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
}

input TestAllowedComparisonStringFieldFilterComparison {
  like: String
  notLike: String
}
