type Query {
  test(input: TestDtoFilter!): Int!
}

input TestDtoFilter {
  and: [TestFilterDtoFilter!]
  or: [TestFilterDtoFilter!]
  id: NumberFieldComparison
  boolField: BooleanFieldComparison
  dateField: DateFieldComparison
  floatField: FloatFieldComparison
  intField: IntFieldComparison
  numberField: NumberFieldComparison
  stringField: StringFieldComparison
  timestampField: TimestampFieldComparison
}

input TestFilterDtoFilter {
  and: [TestFilterDtoFilter!]
  or: [TestFilterDtoFilter!]
  id: NumberFieldComparison
  boolField: BooleanFieldComparison
  dateField: DateFieldComparison
  floatField: FloatFieldComparison
  intField: IntFieldComparison
  numberField: NumberFieldComparison
  stringField: StringFieldComparison
  timestampField: TimestampFieldComparison
}

input NumberFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: Float
  neq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float!]
  notIn: [Float!]
  between: NumberFieldComparisonBetween
}

input NumberFieldComparisonBetween {
  lower: Float!
  upper: Float!
}

input BooleanFieldComparison {
  is: Boolean
  isNot: Boolean
}

input DateFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: DateTime
  neq: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  between: DateFieldComparisonBetween
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateFieldComparisonBetween {
  lower: DateTime!
  upper: DateTime!
}

input FloatFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: Float
  neq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float!]
  notIn: [Float!]
  between: FloatFieldComparisonBetween
}

input FloatFieldComparisonBetween {
  lower: Float!
  upper: Float!
}

input IntFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: Int
  neq: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int!]
  notIn: [Int!]
  between: IntFieldComparisonBetween
}

input IntFieldComparisonBetween {
  lower: Int!
  upper: Int!
}

input StringFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: String
  neq: String
  gt: String
  gte: String
  lt: String
  lte: String
  like: String
  notLike: String
  iLike: String
  notILike: String
  in: [String!]
  notIn: [String!]
}

input TimestampFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: Timestamp
  neq: Timestamp
  gt: Timestamp
  gte: Timestamp
  lt: Timestamp
  lte: Timestamp
  in: [Timestamp!]
  notIn: [Timestamp!]
  between: TimestampFieldComparisonBetween
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

input TimestampFieldComparisonBetween {
  lower: Timestamp!
  upper: Timestamp!
}
