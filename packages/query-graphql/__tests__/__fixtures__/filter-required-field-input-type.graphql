type Query {
  test(input: TestComparisonDtoFilter!): Int!
}

input TestComparisonDtoFilter {
  and: [TestFilterRequiredComparisonFilter!]
  or: [TestFilterRequiredComparisonFilter!]
  id: NumberFieldComparison
  requiredField: BooleanFieldComparison!
  nonRequiredField: DateFieldComparison
  notSpecifiedField: NumberFieldComparison
}

input TestFilterRequiredComparisonFilter {
  and: [TestFilterRequiredComparisonFilter!]
  or: [TestFilterRequiredComparisonFilter!]
  id: NumberFieldComparison
  requiredField: BooleanFieldComparison!
  nonRequiredField: DateFieldComparison
  notSpecifiedField: NumberFieldComparison
}

input NumberFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: Float
  neq: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float!]
  notIn: [Float!]
  between: NumberFieldComparisonBetween
  notBetween: NumberFieldComparisonBetween
}

input NumberFieldComparisonBetween {
  lower: Float!
  upper: Float!
}

input BooleanFieldComparison {
  is: Boolean
  isNot: Boolean
}

input DateFieldComparison {
  is: Boolean
  isNot: Boolean
  eq: DateTime
  neq: DateTime
  gt: DateTime
  gte: DateTime
  lt: DateTime
  lte: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  between: DateFieldComparisonBetween
  notBetween: DateFieldComparisonBetween
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateFieldComparisonBetween {
  lower: DateTime!
  upper: DateTime!
}
